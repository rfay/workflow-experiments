name: Tests
on:
  pull_request:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

defaults:
  run:
    shell: bash

env:
  DDEV_DEBUG: true

jobs:
  tests:
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        webserver: [nginx-fpm]
        tests: [test]
        os: [ macos-11 ]
        no-bind-mounts: ['true', 'false']
      fail-fast: false

    runs-on: ${{ matrix.os }}

    env:
      DDEV_TEST_WEBSERVER_TYPE: ${{ matrix.webserver }}
      DDEV_NONINTERACTIVE: "true"
      DDEV_TEST_NO_BIND_MOUNTS: ${{ matrix.no-bind-mounts }}
    steps:
      - uses: actions/checkout@v2

      - name: GOTEST_SHORT setup - use "true" except for testfullsitesetup
        run: |
          if [ "${{ matrix.tests }}" != "testfullsitesetup" ]; then
            echo "GOTEST_SHORT=true" >> $GITHUB_ENV
          fi

      - name: Cache homebrew
        uses: actions/cache@v2
        env:
          cache-name: cache-homebrew
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: /usr/local
          key: ${{ runner.os }}-build-${{ env.cache-name }}--
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache lima
        uses: actions/cache@v2
        env:
          cache-name: cache-lima
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.lima
          key: ${{ runner.os }}-build-${{ env.cache-name }}--
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

      - name: Install Colima and deps (macOS)
        if: matrix.os == 'macos-11'
        run: ./.github/workflows/macos-colima-setup.sh

#      - name: DDEV tests
#        run: |
#          echo "$(docker --version)"
#          make ${{ matrix.tests }}

      - name: Store test results
        uses: actions/upload-artifact@v2
        with:
          name: ddev-test-results-${{ matrix.webserver }}
          path: /tmp/testresults/
